{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/component/integration/integration-dialog.component.html","webpack:///./src/app/component/integration/integration-dialog.component.ts","webpack:///./src/app/component/integration/integration.component.html","webpack:///./src/app/component/integration/integration.component.ts","webpack:///./src/app/component/integration/integration.service.ts","webpack:///./src/app/component/profile/profile-dialog.component.html","webpack:///./src/app/component/profile/profile-dialog.component.ts","webpack:///./src/app/component/profile/profile.component.html","webpack:///./src/app/component/profile/profile.component.ts","webpack:///./src/app/component/profile/profile.service.ts","webpack:///./src/app/component/subscription/subscription.component.html","webpack:///./src/app/component/subscription/subscription.component.ts","webpack:///./src/app/service/encryption.service.ts","webpack:///./src/app/service/localstorage.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<section>\\n  <app-profile></app-profile>\\n</section>\\n\\n<section>\\n  <h3> You've granted access to... </h3>\\n  <app-subscription></app-subscription>\\n</section>\\n\\n<section>\\n  <h3> Third party services you've enabled... </h3>\\n  <app-integration></app-integration>\\n</section>\\n\"","import { Component } from '@angular/core';\nimport { LocalStorage } from './service/localstorage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n  title = 'Digital identity protocol';\n\n}\n","import {\n  MatInputModule,\n  MatButtonModule,\n  MatCheckboxModule,\n  MatCardModule,\n  MatGridListModule,\n  MatIconModule,\n  MatSlideToggleModule,\n  MatSliderModule,\n  MatFormFieldModule,\n  MatToolbarModule,\n  MatOptionModule,\n  MatDialogModule,\n  MatListModule,\n  MatSelectModule,\n  MatDialog\n} from '@angular/material';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, InjectionToken } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { ProfileComponent } from './component/profile/profile.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SubscriptionComponent } from './component/subscription/subscription.component';\nimport { IntegrationComponent } from './component/integration/integration.component';\nimport { EncryptionService } from './service/encryption.service';\nimport { IntegrationService } from './component/integration/integration.service';\nimport { ProfileDialogComponent } from './component/profile/profile-dialog.component';\nimport { IntegrationDialogComponent } from './component/integration/integration-dialog.component';\nimport { ProfileService } from './component/profile/profile.service';\nimport { LocalStorage } from './service/localstorage.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProfileComponent,\n    ProfileDialogComponent,\n    SubscriptionComponent,\n    IntegrationDialogComponent,\n    IntegrationComponent,\n  ],\n  imports: [\n    HttpClientModule,\n    MatListModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSliderModule,\n    MatCardModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatOptionModule,\n    MatIconModule,\n    MatGridListModule,\n    MatSlideToggleModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatCheckboxModule,\n    BrowserAnimationsModule,\n    BrowserModule\n  ],\n  entryComponents: [ProfileDialogComponent, IntegrationDialogComponent],\n  providers: [EncryptionService, IntegrationService, ProfileService, LocalStorage],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<h4> Available integrations </h4>\\n<table class=\\\"no-padding\\\">\\n  <tr *ngFor=\\\"let integration of integrations | async\\\">\\n    <td>\\n      {{integration.label}}\\n    </td>\\n    <td>\\n      <mat-slide-toggle [checked]=\\\"updateSelected(integration)\\\" (change)=\\\"setSelected(integration, $event.checked)\\\" [color]=\\\"primary\\\"></mat-slide-toggle>\\n    </td>\\n  </tr>\\n</table>\\n\"","import { Component, Inject, OnDestroy } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { IntegrationService } from './integration.service';\nimport { LocalStorage } from '../../service/localstorage.service';\n\n@Component({\n  templateUrl: 'integration-dialog.component.html'\n})\nexport class IntegrationDialogComponent {\n\n  public integrations;\n\n  constructor(\n    private localStorage: LocalStorage,\n    private integrationService: IntegrationService,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n\n    this.integrations = this.integrationService.intergrationsPossibilities;\n\n  }\n\n  public setSelected(thingy, stuff) {\n\n    if (stuff) {\n\n      this.integrationService.selectedServices.push(thingy);\n\n    } else {\n\n      this.integrationService.selectedServices\n        .forEach((otherstuff, index) => {\n\n          if (thingy && otherstuff && otherstuff.label === thingy.label) {\n\n            this.integrationService.selectedServices.splice(index, 1);\n\n          }\n\n        });\n\n    }\n\n    this.localStorage.updateDB(this.integrationService.selectedServices);\n\n  }\n\n  public updateSelected(thingy) {\n\n    return this.integrationService.selectedServices.includes(thingy);\n\n  }\n\n}\n","module.exports = \"<mat-list role=\\\"list\\\">\\n  <mat-list-item class=\\\"test\\\" *ngFor=\\\"let integration of chosenSelected\\\" role=\\\"listitem\\\">\\n      <img class=\\\"circle\\\" width=\\\"40\\\" style=\\\"margin-right: 20px\\\" [src]=\\\"integration.image\\\" alt=\\\"\\\">{{ integration.label }}\\n  </mat-list-item>\\n</mat-list>\\n\\n<button style=\\\"margin-top: 20px;\\\" mat-raised-button (click)=\\\"openDialog()\\\">+</button>\\n\"","import { Component, OnInit, Inject, AfterViewChecked, OnChanges } from '@angular/core';\nimport { IntegrationService } from './integration.service';\nimport { MAT_DIALOG_DATA, MatDialog } from '@angular/material';\nimport { IntegrationDialogComponent } from './integration-dialog.component';\n\n@Component({\n  selector: 'app-integration',\n  templateUrl: './integration.component.html'\n})\nexport class IntegrationComponent {\n\n  chosenSelected: any;\n\n  constructor(\n    private integrationService: IntegrationService,\n    public dialog: MatDialog) {\n\n    this.chosenSelected = this.integrationService.selectedServices;\n\n  }\n\n  openDialog(): void {\n    this.dialog.open(IntegrationDialogComponent, {\n      width: '400px'\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, from, BehaviorSubject, Subject } from 'rxjs';\nimport { tap, map, scan } from 'rxjs/operators';\nimport { LocalStorage } from '../../service/localstorage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IntegrationService {\n\n  public intergrationsPossibilities: Observable<any[]>;\n  selectedServices;\n\n  private integrations = [\n    {\n      service: 'post_nl',\n      label: 'Post NL',\n      image: 'https://seeklogo.com/images/P/postnl-logo-4DA6C08E55-seeklogo.com.png',\n      url: 'post nl url'\n    },\n    {\n      service: 'politie',\n      label: 'Politie',\n      image: 'http://gtalogo.com/img/8379.png',\n      url: 'politie url'\n    },\n    {\n      service: 'KPN',\n      label: 'KPN',\n      image: 'https://www.consumentenbond.nl/binaries/content/gallery/cbhippowebsite/tests/alles-in-1/afbeeldingen-oud/kpn-logo.jpg/kpn-logo.jpg/cbhippowebsite%3Aplcl',\n      url: 'KPN url'\n    }\n  ];\n\n  constructor(private localStorage: LocalStorage) {\n\n    this.intergrationsPossibilities = of(this.integrations);\n\n    this.selectedServices = this.localStorage.getDB() || [];\n\n  }\n\n}\n","module.exports = \"<h3> Edit user information </h3>\\n<div class=\\\"example-container\\\">\\n\\n  <mat-form-field>\\n    <input matInput [value]=\\\"firstname\\\" placeholder=\\\"Firstname\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput [value]=\\\"lastname\\\" placeholder=\\\"Lastname\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput [value]=\\\"address\\\" placeholder=\\\"Address\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput [value]=\\\"date\\\" (change)=\\\"setNewValue($event.value)\\\" placeholder=\\\"date\\\">\\n  </mat-form-field>\\n\\n  <button mat-button [mat-dialog-close]=\\\"true\\\">Yes</button>\\n\\n</div>\\n\"","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { ProfileService } from './profile.service';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Component({\n  templateUrl: 'profile-dialog.component.html'\n})\nexport class ProfileDialogComponent {\n\n  firstname;\n  lastname;\n  address;\n  date;\n\n  constructor(\n    private profileService: ProfileService,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n\n    this.firstname = this.profileService.firstname;\n    this.lastname = this.profileService.lastname;\n    this.address = this.profileService.address;\n    this.date = this.profileService.date;\n\n  }\n\n  setNewValue(value) {\n\n    console.log('val', value);\n\n  }\n\n}\n","module.exports = \"<div class=\\\"example-container\\\">\\n\\n  <img class=\\\"big-burd\\\" src=\\\"https://i.kinja-img.com/gawker-media/image/upload/s--MSQU8Jk8--/c_scale,f_auto,fl_progressive,q_80,w_800/1293510293511750184.jpg\\\"\\n  />\\n\\n  <mat-list role=\\\"list\\\">\\n    <H1>{{ firstname }} {{ lastname }} </H1>\\n    <button class=\\\"edit\\\" mat-button (click)=\\\"openDialog()\\\">\\n      <mat-icon> edit </mat-icon>\\n    </button>\\n    <table>\\n      <tr>\\n        <td>Date of birth</td>\\n        <td>{{ date }}</td>\\n      </tr>\\n      <tr>\\n        <td>Address</td>\\n        <td>{{ address }}</td>\\n      </tr>\\n      <tr>\\n        <td>Phone number</td>\\n        <td> 0636164164 </td>\\n      </tr>\\n    </table>\\n\\n    <button class=\\\"accent\\\" (click)=\\\"dispatchSMS()\\\" mat-button> Message me </button>\\n\\n    <mat-list-item role=\\\"listitem\\\"> </mat-list-item>\\n  </mat-list>\\n\\n</div>\\n\"","import { Component, OnDestroy } from '@angular/core';\nimport { EncryptionService } from '../../service/encryption.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { ProfileDialogComponent } from './profile-dialog.component';\nimport { ProfileService } from './profile.service';\nimport { HttpClient } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html'\n})\nexport class ProfileComponent implements OnDestroy {\n\n  firstname;\n  lastname;\n  address;\n  date;\n\n  constructor(\n    private http: HttpClient,\n    private profileService: ProfileService,\n    private rsa: EncryptionService,\n    public dialog: MatDialog) {\n\n    this.firstname = this.profileService.firstname;\n    this.lastname = this.profileService.lastname;\n    this.address = this.profileService.address;\n    this.date = this.profileService.date;\n\n  }\n\n  public dispatchSMS() {\n\n    return this.http.get('http://integrations.live.digital-identity-protocol.nl/dip/send-message/B2BA2AA599E21A32B8152C37D45933DD')\n      .subscribe();\n\n  }\n\n  ngOnDestroy(): void {\n    this.http.get('http://integrations.live.digital-identity-protocol.nl/dip/send-message/B2BA2AA599E21A32B8152C37D45933DD')\n      .subscribe();\n  }\n\n  openDialog(): void {\n    this.dialog.open(ProfileDialogComponent, {\n      width: '400px'\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, from, BehaviorSubject, Subject } from 'rxjs';\nimport { tap, map, scan } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  firstname;\n  lastname;\n  address;\n  date;\n\n  constructor() {\n\n    this.firstname = this.firstname || 'Big';\n    this.lastname = this.lastname || 'Bird';\n    this.address = this.address || '123 Sesame street, Manhatten, New York';\n    this.date = this.date || 'November 10, 1968';\n\n  }\n\n}\n","module.exports = \"<mat-list role=\\\"list\\\">\\n  <mat-list-item class=\\\"test\\\" *ngFor=\\\"let integration of chosenSelected\\\" role=\\\"listitem\\\">\\n    <img width=\\\"40\\\" class=\\\"circle\\\" [src]=\\\"integration.image\\\" alt=\\\"\\\">{{ integration.label }}\\n  </mat-list-item>\\n</mat-list>\\n\"","import { Component } from '@angular/core';\nimport { IntegrationService } from '../integration/integration.service';\n\n@Component({\n  selector: 'app-subscription',\n  templateUrl: './subscription.component.html'\n})\nexport class SubscriptionComponent {\n\n  chosenSelected: any;\n\n  constructor(private integrationService: IntegrationService) {\n\n    this.chosenSelected = this.integrationService.selectedServices;\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\ndeclare const cryptico: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EncryptionService {\n  privateKey: string;\n\n  publicKey: string;\n\n  constructor() {\n\n    const somePassphrase = 'The Moon is a Harsh Mistress.';\n    this.restoreKeys(somePassphrase);\n\n    console.log(this.privateKey);\n    console.log(this.publicKey);\n\n  }\n\n  restoreKeys(passphrase: string) {\n    this.privateKey = cryptico.generateRSAKey(passphrase, 512);\n    this.publicKey = cryptico.publicKeyString(this.privateKey);\n  }\n\n  encrypt(data: string, publicKey: string) {\n    return cryptico.encrypt(data, publicKey);\n  }\n\n  decrypt(data: string, privateKey: string) {\n    return cryptico.decrypt(data, privateKey);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorage {\n\n  db;\n  items = [];\n\n  constructor() {\n\n    this.db = window.localStorage.getItem('db');\n\n    if (!this.db) {\n\n      this.db = window.localStorage.setItem('db', JSON.stringify(this.items));\n\n    }\n\n  }\n\n  private clearDB() {\n\n    window.localStorage.removeItem('db');\n\n  }\n\n  public getDB() {\n\n    if (this.db) {\n\n      return JSON.parse(this.db);\n\n    }\n\n  }\n\n  public updateDB(items: any) {\n\n    this.items.push(items);\n\n    window.localStorage.setItem('db', JSON.stringify(items));\n\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}