{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/component/button/button.component.html","webpack:///./src/app/component/button/button.component.ts","webpack:///./src/app/component/integration/integration.component.html","webpack:///./src/app/component/integration/integration.component.ts","webpack:///./src/app/component/profile/profile.component.html","webpack:///./src/app/component/profile/profile.component.ts","webpack:///./src/app/component/subscription/subscription.component.html","webpack:///./src/app/component/subscription/subscription.component.ts","webpack:///./src/app/directive/edit.directive.ts","webpack:///./src/app/service/encryption.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<section>\\n  <h2>User Profile</h2>\\n  <app-profile></app-profile>\\n</section>\\n\\n<section>\\n  <h2> Subscriptions </h2>\\n  <app-subscription></app-subscription>\\n</section>\\n\\n<section>\\n  <h2> Integration </h2>\\n  <app-integration></app-integration>\\n</section>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'Digital identity protocol';\n}\n","import {\n  MatInputModule,\n  MatButtonModule,\n  MatCheckboxModule,\n  MatCardModule,\n  MatGridListModule,\n  MatFormFieldModule,\n  MatToolbarModule,\n  MatOptionModule,\n  MatListModule,\n  MatSelectModule\n} from '@angular/material';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { ProfileComponent } from './component/profile/profile.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { EditDirective } from './directive/edit.directive';\nimport { SubscriptionComponent } from './component/subscription/subscription.component';\nimport { IntegrationComponent } from './component/integration/integration.component';\nimport { ButtonComponent } from './component/button/button.component';\nimport { EncryptionService } from './service/encryption.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProfileComponent,\n    EditDirective,\n    SubscriptionComponent,\n    IntegrationComponent,\n    ButtonComponent\n  ],\n  imports: [\n    MatListModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatCardModule,\n    MatButtonModule,\n    MatOptionModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatCheckboxModule,\n    BrowserAnimationsModule,\n    BrowserModule\n  ],\n  providers: [EncryptionService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<button mat-raised-button> + </button>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html'\n})\nexport class ButtonComponent {\n\n  constructor() { }\n\n}\n","module.exports = \"<mat-list role=\\\"list\\\">\\n  <mat-list-item *ngFor=\\\"let integration of integrations\\\" role=\\\"listitem\\\">\\n    {{ integration.service }}\\n  </mat-list-item>\\n</mat-list>\\n\\n<button mat-raised-button> + </button>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-integration',\n  templateUrl: './integration.component.html'\n})\nexport class IntegrationComponent {\n\n  public integrations: any;\n\n  constructor() {\n\n    this.integrations = [\n      {\n        service: 'kpn',\n      },\n      {\n        service: 'politie'\n      },\n      {\n        service: 'Kadester'\n      }\n    ];\n\n  }\n\n}\n","module.exports = \"<div class=\\\"example-container\\\">\\n\\n  <img class=\\\"big-burd\\\" src=\\\"https://cdn.shopify.com/s/files/1/1291/5963/products/B00GSYZTUI.01-A2PJJEAW2GV0DY.MAIN._SS1000_SCRMZZZZZZZ_large.jpeg?v=1466143362\\\"\\n  />\\n\\n  <mat-list role=\\\"list\\\">\\n    <mat-list-item role=\\\"listitem\\\"> Firstname: John </mat-list-item>\\n    <mat-list-item role=\\\"listitem\\\"> Lastname: Doe </mat-list-item>\\n    <mat-list-item role=\\\"listitem\\\"> Address: Rembrandtplein 123, 1017 CT Amsterdam </mat-list-item>\\n    <mat-list-item role=\\\"listitem\\\"> City: Amsterdam </mat-list-item>\\n  </mat-list>\\n\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html'\n})\nexport class ProfileComponent { }\n","module.exports = \"<mat-list role=\\\"list\\\">\\n  <mat-list-item role=\\\"listitem\\\">Item 1</mat-list-item>\\n  <mat-list-item role=\\\"listitem\\\">Item 2</mat-list-item>\\n  <mat-list-item role=\\\"listitem\\\">Item 3</mat-list-item>\\n</mat-list>\\n\\n<button mat-raised-button> + </button>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-subscription',\n  templateUrl: './subscription.component.html'\n})\nexport class SubscriptionComponent {\n}\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[appEdit]'\n})\nexport class EditDirective {\n\n  constructor() { }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EncryptionService {\n\n  private passPhrase: string;\n  private rsaKey: string;\n  private decrypt: string;\n\n  constructor() {\n    // this.passPhrase = 'The Moon is a Harsh Mistress.';\n    // this.rsaKey = cryptico.generateRSAKey(this.passPhrase, 512);\n    // console.log(cryptico);\n  }\n\n  public decryptMessage(url, payload) {\n    // this.decrypt = cryptico.decrypt(payload, this.rsaKey);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}